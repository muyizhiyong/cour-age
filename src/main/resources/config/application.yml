server:
  port: 18881
  tomcat:
    uri-encoding: UTF-8
    ## 等待队列长度，默认100。
    #accept-count: 1000
    ## 超时最多5秒后断开连接
    connection-timeout: 5000
    threads:
      ## 最大工作线程数，默认200 （
      max: 800
      ## 最小工作空闲线程数，默认10
      min-spare: 100
  non-ssl-port: 18882
  ssl:
    enabled: false
    protocol: TLS
    key-store: classpath:tomcat.keystore
    key-password: 123456
    key-store-type: JKS

spring:
  main:
    allow-bean-definition-overriding: true
  http:
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 1000MB
  application:
    name: courage
  datasource:
#    type: com.zaxxer.hikari.HikariDataSource
#    url: jdbc:mysql://47.100.115.11:3306/courage?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowMultiQueries=true
#    username: root
#    password: root
#    driver-class-name: com.mysql.jdbc.Driver
#    hikari:
#      minimum-idle: 10
#      maximum-pool-size: 60
#      idle-timeout: 30000
#      validation-timeout: 3000
#      connection-timeout: 60000
    master:
      jdbc-url: jdbc:mysql://47.100.115.11:3306/courage?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowMultiQueries=true
      username: root
      password: root
      driver-class-name: com.mysql.jdbc.Driver
      type: com.zaxxer.hikari.HikariDataSource
    slave1:
      jdbc-url: jdbc:mysql://47.100.115.11:3306/courage_slave1?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowMultiQueries=true
      username: root
      password: root
      driver-class-name: com.mysql.jdbc.Driver
      type: com.zaxxer.hikari.HikariDataSource
    slave2:
      jdbc-url: jdbc:mysql://47.100.115.11:3306/courage_slave2?useUnicode=true&characterEncoding=utf-8&useSSL=false&allowMultiQueries=true
      username: root
      password: root
      driver-class-name: com.mysql.jdbc.Driver
      type: com.zaxxer.hikari.HikariDataSource

  redis:
    database: 0
    host: 47.100.115.11
    port: 6379
    password: root123
    timeout: 60000 #连接超时时间（毫秒）
    lettuce:
      shutdown-timeout: 300ms #关闭超时
      pool:
        max-active: 600 # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1  # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 10  # 连接池中的最大空闲连接
        min-idle: 1   # 连接池中的最小空闲连接
  #配置rabbitMq 服务器
  rabbitmq:
    addresses: 47.100.115.11:5672,47.100.115.11:5673,47.100.115.11:5674
    username: admin
    password: admin
    virtual-host: courage
    listener:
      simple:
        #监听数
        concurrency: 1
        #确认消息模式
        acknowledge-mode: manual
        #负载均衡
        prefetch: 1
  #配置mongoDB
  data:
    mongodb:
      host: 47.100.115.11
      port: 27017
      database: courage
      username: courage
      password: courage
  mail:
    host: smtp.163.com
    port: 25
    default-encoding: utf-8
    username: muyi_zhiyong@163.com
    password: yzy587587YZY
    protocol: smtp
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true

logging:
  config: classpath:logback.xml

common:
  mapServer:
    mapApiUrl: http://api.map.baidu.com
    mapApiAk: 133848c89004afe8dede89ef7428c98d
  fileTEMP:
    tmpFilePath: /tmpfile

quartz:
  enable: false
  scheduler:
    instance-name: clusteredScheduler
    instance-id: AUTO
    skip-update-check: true
  job-store:
    class-name: org.quartz.impl.jdbcjobstore.JobStoreTX
    driver-delegate-class: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
    datasource: quartzDataSource
    table-prefix: QRTZ_
    is-clustered: true
  thread-pool:
    class-name: org.quartz.simpl.SimpleThreadPool
    thread-count: 5
  datasource:
    driver: com.mysql.jdbc.Driver
    url: jdbc:mysql://47.100.115.11:3306/courage?useUnicode=true&characterEncoding=utf-8&useSSL=false
    user: root
    password: root
    maxConnections: 5

weather:
    weatherlUrl: http://www.weather.com.cn/weather/%s.shtml
    etouchUrl: http://wthrcdn.etouch.cn/weather_mini?citykey=%s

rabbitmq:
  exchange: courageExchange
  queue-name:
    # 发送给ucp的渠道名称：队列名称
    boot2other:
        RabbitMqInput: courage.boot2other
        RabbitMqInput1: courage.boot2other1
      # 可以配置监听多个队列，以逗号分隔
    #other2boot: courage.other2boot
    other2boot: courage.boot2other
  data:
    boot2other:
      # boot --> other消息发送后，等待other响应的超时时间（毫秒）
      timeout: 80000

auth:
  accessTokenValiditySeconds: 1800
  refreshTokenValiditySeconds: 3600

redis:
  prefix: 'iCourage:'

management:
  health:
    db:
      enabled: false
